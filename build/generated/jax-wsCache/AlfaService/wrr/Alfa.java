
package wrr;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Alfa", targetNamespace = "http://Alfa/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Alfa {


    /**
     * 
     * @param mail
     * @param username
     * @param account
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Info")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Info", targetNamespace = "http://Alfa/", className = "wrr.Info")
    @ResponseWrapper(localName = "InfoResponse", targetNamespace = "http://Alfa/", className = "wrr.InfoResponse")
    @Action(input = "http://Alfa/Alfa/InfoRequest", output = "http://Alfa/Alfa/InfoResponse")
    public String info(
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "account", targetNamespace = "")
        String account,
        @WebParam(name = "mail", targetNamespace = "")
        String mail);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mailCheck", targetNamespace = "http://Alfa/", className = "wrr.MailCheck")
    @ResponseWrapper(localName = "mailCheckResponse", targetNamespace = "http://Alfa/", className = "wrr.MailCheckResponse")
    @Action(input = "http://Alfa/Alfa/mailCheckRequest", output = "http://Alfa/Alfa/mailCheckResponse")
    public boolean mailCheck(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ConnectionNQ")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConnectionNQ", targetNamespace = "http://Alfa/", className = "wrr.ConnectionNQ")
    @ResponseWrapper(localName = "ConnectionNQResponse", targetNamespace = "http://Alfa/", className = "wrr.ConnectionNQResponse")
    @Action(input = "http://Alfa/Alfa/ConnectionNQRequest", output = "http://Alfa/Alfa/ConnectionNQResponse")
    public String connectionNQ(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

}
